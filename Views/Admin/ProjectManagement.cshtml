@model List<SoftwareProject.Models.ProjectModel>
@{
    ViewData["Title"] = "Project Management";
    var showArchived = ViewBag.ShowArchived ?? false;
}

<style>
    .modern-table {
        width: 100%;
        table-layout: fixed;
        background: #f8fbff;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.06);
    }
    .modern-table th,
    .modern-table td {
        padding: 14px 10px;
        vertical-align: middle;
        font-size: 1rem;
    }
    .modern-table th {
        background: #00bfff;
        color: #fff;
        font-weight: 600;
        border-bottom: 2px solid #b6e0fe;
    }
    .modern-table tbody tr {
        transition: background 0.2s;
    }
    .modern-table tbody tr:hover {
        background: #eaf6ff;
    }
    .badge-status {
        font-size: 0.95em;
        padding: 6px 14px;
        border-radius: 20px;
        font-weight: 500;
        color: #fff;
        display: inline-block;
    }
    .badge-status.approved { background: #28a745; }
    .badge-status.pending { background: #ffc107; color: #222; }
    .badge-status.completed { background: #007bff; }
    .badge-status.archived { background: #6c757d; }
    .action-btn {
        border: none;
        border-radius: 6px;
        padding: 6px 10px;
        margin: 0 2px;
        font-size: 1.1em;
        cursor: pointer;
        color: #fff;
        transition: background 0.2s;
    }
    .action-btn.view { background: #17a2b8; }
    .action-btn.edit { background: #ffc107; color: #222; }
    .action-btn.delete { background: #dc3545; }
    .action-btn.status { background: #343a40; }
    .action-btn:hover { opacity: 0.85; }
    /* Modal Table Styling */
    .modern-table-modal {
        width: 100%;
        table-layout: fixed;
        background: #f8fbff;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.06);
    }
    .modern-table-modal th,
    .modern-table-modal td {
        padding: 12px 8px;
        vertical-align: middle;
        font-size: 0.98rem;
    }
    .modern-table-modal th {
        background: #00bfff;
        color: #fff;
        font-weight: 600;
        border-bottom: 2px solid #b6e0fe;
    }
    .modern-table-modal tbody tr {
        transition: background 0.2s;
    }
    .modern-table-modal tbody tr:hover {
        background: #eaf6ff;
    }
</style>

<div class="container mt-5 pt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Project Management</h2>
        <div>
            <a class="btn btn-success me-2" href="@Url.Action("ExportProjects", "Admin")">
                <i class="fa fa-download"></i> Export Projects
            </a>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        TempData["Error"] = null;
    }

    <!-- Projects Table -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="modern-table table table-bordered mb-0">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Professor</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var project in Model.Where(p => p.IsArchived == showArchived))
                        {
                            <tr>
                                <td>@project.Title</td>
                                <td>@project.Description</td>
                                <td>@project.ProfessorEmail</td>
                                <td>
                                    <span class="badge-status @(project.Status.ToLower())">
                                        @project.Status
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button class="action-btn view" onclick="viewProjectDetails('@project.Id')">
                                            <i class="fa fa-eye"></i>
                                        </button>
                                        <button class="action-btn edit" onclick="editProject('@project.Id')">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                        <button class="action-btn delete" onclick="deleteProject('@project.Id')">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                        @if (project.Status == "Pending")
                                        {
                                            <!-- Approve button removed -->
                                        }
                                        @if (!project.IsArchived)
                                        {
                                            <!-- Archive button removed -->
                                        }
                                        <!-- Change Status Button -->
                                        <button class="action-btn status" onclick="changeProjectStatus('@project.Id', '@project.Status')" title="Change Status">
                                            <i class="fa fa-exchange"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Edit Project Modal -->
<div class="modal fade" id="editProjectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editProjectForm">
                <div class="modal-header"><h5 class="modal-title">Edit Project</h5></div>
                <div class="modal-body">
                    <input type="hidden" id="editProjectId" name="id">
                    <table class="modern-table-modal table table-bordered mb-0">
                        <tr><th style="width:140px;">Title</th><td><input type="text" class="form-control" id="editTitle" name="title"></td></tr>
                        <tr><th>Description</th><td><textarea class="form-control" id="editDescription" name="description"></textarea></td></tr>
                        <tr><th>Professor ID</th><td><input type="text" class="form-control" id="editProfessorId" name="professorId"></td></tr>
                        <tr><th>Total Slots</th><td><input type="number" class="form-control" id="editTotalSlots" name="totalSlots" min="1"></td></tr>
                        <tr><th>Enrolled Students</th>
                            <td>
                                <ul id="enrolledStudentsList" class="list-group"></ul>
                                <div class="mb-3 d-flex">
                                    <input type="text" class="form-control me-2" id="addStudentInput" placeholder="Student ID or Email">
                                    <button type="button" class="btn btn-primary" id="addStudentBtn">Add</button>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Change Status Modal -->
<div class="modal fade" id="changeStatusModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="changeStatusForm">
        <div class="modal-header"><h5 class="modal-title">Change Project Status</h5></div>
        <div class="modal-body">
          <input type="hidden" id="changeStatusProjectId" name="id">
          <table class="modern-table-modal table table-bordered mb-0">
            <tr>
                <th style="width:140px;">Status</th>
                <td>
                    <select class="form-select" id="newStatus" name="status">
                        <option value="Pending">Pending</option>
                        <option value="Approved">Approved</option>
                        <option value="Completed">Completed</option>
                        <option value="Archived">Archived</option>
                    </select>
                </td>
            </tr>
          </table>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save</button>
          <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Custom Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header" style="background:#00bfff;color:#fff;">
        <h5 class="modal-title">Confirm Delete</h5>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this project?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
      </div>
    </div>
  </div>
</div>

<!-- Custom Approve Confirmation Modal -->
<div class="modal fade" id="approveConfirmModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header" style="background:#00bfff;color:#fff;">
        <h5 class="modal-title">Confirm Approve</h5>
      </div>
      <div class="modal-body">
        Are you sure you want to approve this project?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="confirmApproveBtn">Approve</button>
      </div>
    </div>
  </div>
</div>

<!-- Custom Archive Confirmation Modal -->
<div class="modal fade" id="archiveConfirmModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header" style="background:#00bfff;color:#fff;">
        <h5 class="modal-title">Confirm Archive</h5>
      </div>
      <div class="modal-body">
        Are you sure you want to archive this project?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="confirmArchiveBtn">Archive</button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <script>
        function viewProjectDetails(projectId) {
            window.location.href = `/Admin/ViewProject/${projectId}`;
        }

        function editProject(projectId) {
            $.get('/Admin/GetProject', { id: projectId }, function(data) {
                $('#editProjectId').val(data.id || data.Id);
                $('#editTitle').val(data.title || data.Title);
                $('#editDescription').val(data.description || data.Description);
                $('#editProfessorId').val(data.professorEmail || data.professorId || data.ProfessorEmail || data.ProfessorId);
                $('#editTotalSlots').val(data.totalSlots || data.TotalSlots || 1);
                // Populate enrolled students
                var enrolled = data.enrolled || [];
                var $list = $('#enrolledStudentsList');
                $list.empty();
                enrolled.forEach(function(studentId) {
                    $list.append('<li class="list-group-item d-flex justify-content-between align-items-center">' +
                        '<span class="student-id">' + studentId + '</span>' +
                        '<button type="button" class="btn btn-sm btn-danger ms-2 remove-student-btn" data-id="' + studentId + '"><i class="fa fa-times"></i></button>' +
                        '</li>');
                });
                $('#editProjectModal').modal('show');
            });
        }

        // Remove student from list
        $(document).on('click', '.remove-student-btn', function() {
            $(this).closest('li').remove();
        });

        // Add student to list
        $('#addStudentBtn').click(function() {
            var val = $('#addStudentInput').val().trim();
            if (val) {
                $('#enrolledStudentsList').append('<li class="list-group-item d-flex justify-content-between align-items-center">' +
                    '<span class="student-id">' + val + '</span>' +
                    '<button type="button" class="btn btn-sm btn-danger ms-2 remove-student-btn" data-id="' + val + '"><i class="fa fa-times"></i></button>' +
                    '</li>');
                $('#addStudentInput').val('');
            }
        });

        // Submit edit form
        $('#editProjectForm').submit(function(e) {
            e.preventDefault();
            var enrolled = [];
            $('#enrolledStudentsList .student-id').each(function() {
                enrolled.push($(this).text().trim());
            });
            var data = $(this).serializeArray();
            data.push({ name: 'enrolled', value: JSON.stringify(enrolled) });
            // Ensure totalSlots is sent as an integer
            var totalSlotsVal = parseInt($('#editTotalSlots').val(), 10);
            data = data.filter(function(item) { return item.name !== 'totalSlots'; });
            data.push({ name: 'totalSlots', value: totalSlotsVal });
            $.post('/Admin/EditProject', data, function(resp) {
                if (resp.success) location.reload();
                else alert('Error: ' + (resp.message || 'Could not update project.'));
            });
        });

        let projectIdToDelete = null;
        let projectIdToApprove = null;
        let projectIdToArchive = null;

        function deleteProject(projectId) {
            projectIdToDelete = projectId;
            $('#deleteConfirmModal').modal('show');
        }
        $('#confirmDeleteBtn').click(function() {
            if (projectIdToDelete) {
                fetch(`/Admin/DeleteProject/${projectIdToDelete}`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error deleting project: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting project');
                });
                $('#deleteConfirmModal').modal('hide');
            }
        });

        function approveProject(projectId) {
            projectIdToApprove = projectId;
            $('#approveConfirmModal').modal('show');
        }
        $('#confirmApproveBtn').click(function() {
            if (projectIdToApprove) {
                fetch(`/Admin/ApproveProject/${projectIdToApprove}`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error approving project: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error approving project');
                });
                $('#approveConfirmModal').modal('hide');
            }
        });

        function archiveProject(projectId) {
            projectIdToArchive = projectId;
            $('#archiveConfirmModal').modal('show');
        }
        $('#confirmArchiveBtn').click(function() {
            if (projectIdToArchive) {
                fetch(`/Admin/ArchiveProject/${projectIdToArchive}`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error archiving project: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error archiving project');
                });
                $('#archiveConfirmModal').modal('hide');
            }
        });

        function changeProjectStatus(projectId, currentStatus) {
            $('#changeStatusProjectId').val(projectId);
            $('#newStatus').val(currentStatus);
            $('#changeStatusModal').modal('show');
        }

        $('#changeStatusForm').submit(function(e) {
            e.preventDefault();
            var data = $(this).serialize();
            $.post('/Admin/ChangeProjectStatus', data, function(resp) {
                if (resp.success) location.reload();
                else alert('Error: ' + (resp.message || 'Could not change status.'));
            });
        });
    </script>
} 